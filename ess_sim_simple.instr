
DEFINE INSTRUMENT test(
  m_val=2, 
  guide_mid_width = 0.18, 
  guide_mid_height = 0.18,
  guide_linxw = 10.5,
  guide_loutxw = 10.5,
  guide_linyh = 10.5,
  guide_loutyh = 10.5
)

DECLARE
%{
double u;
double x_div;
double y_div;
int flag;
double sample_size = 1.0;
%}

/* The INITIALIZE section is executed when the simulation starts     */
/* (C code). You may use them as component parameter values.         */
INITIALIZE
%{
u=1e-4;
%}

/* Here comes the TRACE section, where the actual      */
/* instrument is defined as a sequence of components.  */
TRACE

COMPONENT Origin = Progress_bar()
  AT (0,0,0) ABSOLUTE

/* Vi bruger source simple til BT fordi den kan give os bedre statistik */
    /*
COMPONENT source = ESS_butterfly(
    sector = "W", beamline = 4, dist = 2, focus_xw = 0.1,
    focus_yh = 0.1, Lmin = 0.5, Lmax = 8)
  AT (0, 0, 0) RELATIVE Origin
    */

COMPONENT source = Source_simple(
    yheight = 0.03, xwidth = 0.08, dist = 2, focus_xw = 0.1,
    focus_yh = 0.1, gauss = 0, lambda0=4.25, dlambda = 3.75)
  AT (0, 0, 0) RELATIVE Origin

COMPONENT source_psd = PSD_monitor(
  filename = "source_psd.dat", xwidth = 0.02, yheight = 0.02, restore_neutron=1)
AT (0, 0, 2 - 2 * u) RELATIVE PREVIOUS

COMPONENT source_div = Divergence_monitor(
    nh = 90, nv = 90, filename = "source_div.dat", xwidth = sample_size,
    yheight = sample_size, maxdiv_h = 2, maxdiv_v = 2,
    restore_neutron = 1)
  AT (0, 0, 2 - u) RELATIVE PREVIOUS
EXTEND
    %{
    x_div = RAD2DEG*atan2(vx,vz);
    y_div = RAD2DEG*atan2(vy,vz);
    if (SCATTERED) flag=1; else flag=0;
    %}

COMPONENT Brillmon_begin = Brilliance_monitor(
   nlam = 101, nt = 101, filename = "source_brilliance.dat", t_0 = 1,
    t_1 =5e5, lambda_0 = 0, lambda_1 = 8,
    Freq =1, toflambda=0, tofcuts=0,
    xwidth=0.01, yheight=0.01, restore_neutron=1)
  // WHEN (x_div < 0.75 && x_div > -0.75)
  AT (0, 0, 2) RELATIVE source



COMPONENT guide = Elliptic_guide_gravity(
    l = 162.4, xwidth = guide_mid_width, yheight = guide_mid_height, dimensionsAt="mid",
    linxw = guide_linxw, loutxw = guide_loutxw, linyh = guide_linyh, loutyh = guide_loutyh, 
    m = m_val)
  AT (0, 0, 2) RELATIVE source
  ROTATED (0, 0, 0) RELATIVE source

COMPONENT Monitors = Arm()
  AT (0, 0, 165) RELATIVE source

COMPONENT sample_div = Divergence_monitor(
  nh = 90, nv = 90, filename = "sample_div.dat", xwidth = sample_size,
  yheight = sample_size, maxdiv_h = 2, maxdiv_v = 2,
  restore_neutron = 1)
AT (0, 0, u) RELATIVE PREVIOUS
EXTEND
  %{
  x_div = RAD2DEG*atan2(vx,vz);
  y_div = RAD2DEG*atan2(vy,vz);
  if (SCATTERED) flag=1; else flag=0;
  %}

COMPONENT Brillmon = Brilliance_monitor(
   nlam = 101, nt = 101, filename = "sample_brilliance.dat", t_0 = 1e4,
    t_1 =5e5, lambda_0 = 0, lambda_1 = 8,
    Freq =1, toflambda=0, tofcuts=0, source_dist=1,
    xwidth=0.01, yheight=0.01, restore_neutron=1)
WHEN (x_div < 0.75 && x_div > -0.75)
AT (0, 0, u) RELATIVE Monitors
      
COMPONENT sample_psd = PSD_monitor(
  filename = "sample_psd.dat", xwidth = 0.02, yheight = 0.02, restore_neutron=1)
AT (0, 0, u) RELATIVE PREVIOUS

/*
COMPONENT mon1 = PSD_monitor(
    filename = "det1.dat", xwidth = 0.01, yheight = 0.01, restore_neutron=1)
  AT (0, 0, u) RELATIVE PREVIOUS


COMPONENT mon2 = Divergence_monitor(
    nh = 90, nv = 90, filename = "det2.dat", xwidth = 0.01,
    yheight = 0.01, maxdiv_h = 0.75, maxdiv_v = 0.75,
    restore_neutron = 1)
  AT (0, 0, u) RELATIVE PREVIOUS


COMPONENT mon3 = E_monitor(
    filename = "det3.dat", xwidth = 0.01, yheight = 0.01, Emin = 0,
    Emax = 50, restore_neutron = 1)
  AT (0, 0, u) RELATIVE PREVIOUS


COMPONENT mon4 = L_monitor(
    filename = "det4.dat", xwidth = 0.01, yheight = 0.01,
    Lmin = 0.5, Lmax = 8, restore_neutron = 1)
  AT (0, 0, u) RELATIVE PREVIOUS
*/

/* This section is executed when the simulation ends (C code). Other    */
/* optional sections are : SAVE                                         */
FINALLY
%{
%}
/* The END token marks the instrument definition end */
END




